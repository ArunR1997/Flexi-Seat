// <auto-generated />
using FlexiSeat.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlexiSeat.Migrations
{
    [DbContext(typeof(FlexiSeatDbContext))]
    [Migration("20250709193440_M1_Zones_TableCreation")]
    partial class M1_Zones_TableCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlexiSeat.Data.AppRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FlexiSeat.Data.User", b =>
                {
                    b.Property<string>("ADID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BadgeID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LeadADID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ManagerADID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("ADID");

                    b.HasIndex("LeadADID");

                    b.HasIndex("ManagerADID");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FlexiSeat.Data.Zone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ManagerADID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("ManagerADID");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("FlexiSeat.Data.User", b =>
                {
                    b.HasOne("FlexiSeat.Data.User", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadADID");

                    b.HasOne("FlexiSeat.Data.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerADID");

                    b.HasOne("FlexiSeat.Data.AppRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");

                    b.Navigation("Manager");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FlexiSeat.Data.Zone", b =>
                {
                    b.HasOne("FlexiSeat.Data.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerADID");

                    b.Navigation("Manager");
                });
#pragma warning restore 612, 618
        }
    }
}
